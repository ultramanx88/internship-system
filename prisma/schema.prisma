// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(cuid())
  name         String
  email        String   @unique
  password     String
  roles        String   // เก็บ roles เป็น JSON string
  skills       String?
  statement    String?
  
  // ข้อมูลภาษาไทย
  t_title      String?
  t_name       String?
  t_middle_name String?  // แก้ไขให้ตรงกับ Excel
  t_surname    String?
  
  // ข้อมูลภาษาอังกฤษ
  e_title      String?
  e_name       String?
  e_middle_name String?
  e_surname    String?

  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  applications Application[]
  printRecords PrintRecord[]

  @@map("users")
}

model Internship {
  id          String        @id @default(cuid())
  title       String
  company     Company       @relation(fields: [companyId], references: [id], onDelete: Cascade)
  companyId   String
  location    String
  description String
  type        InternshipType

  applications Application[]

  @@map("internships")
}

model Application {
  id           String            @id @default(cuid())
  student      User              @relation(fields: [studentId], references: [id], onDelete: Cascade)
  studentId    String
  internship   Internship        @relation(fields: [internshipId], references: [id], onDelete: Cascade)
  internshipId String
  status       ApplicationStatus
  dateApplied  DateTime
  feedback     String?
  projectTopic String?

  printRecord   PrintRecord? @relation(fields: [printRecordId], references: [id])
  printRecordId String?

  @@map("applications")
}

model PrintRecord {
  id            String      @id @default(cuid())
  documentNumber String     @unique // เลขที่เอกสาร (ไม่ซ้ำ)
  documentDate  DateTime   // วันที่เอกสาร
  printedAt     DateTime   @default(now())
  printedBy     User       @relation(fields: [printedById], references: [id])
  printedById   String
  
  applications  Application[] // เอกสารหลายใบที่ใช้เลขเดียวกัน
  
  @@map("print_records")
}

model Faculty {
  id      String   @id @default(cuid())
  nameTh  String
  nameEn  String?
}

model Company {
  id          String   @id @default(cuid())
  name        String
  nameEn      String?
  address     String?
  province    String?
  district    String?
  subdistrict String?
  postalCode  String?
  phone       String?
  email       String?
  website     String?
  description String?
  industry    String?
  size        CompanySize?
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  internships Internship[]

  @@map("companies")
}

enum Role {
  admin
  staff
  courseInstructor
  committee
  visitor
  student
}

enum ApplicationStatus {
  pending
  approved
  rejected
}

enum InternshipType {
  internship
  co_op
}

enum CompanySize {
  startup
  small
  medium
  large
  enterprise
}
