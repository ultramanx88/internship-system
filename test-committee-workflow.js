const fetch = require('node-fetch');

const BASE_URL = 'http://localhost:3000';

// Test data
const testData = {
  applicationId: 'app_123', // ‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ Application ‡∏ó‡∏µ‡πà‡∏°‡∏µ courseInstructorStatus = 'approved'
  committeeId: 'committee_1'
};

async function testCommitteeWorkflow() {
  console.log('üß™ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏î‡∏™‡∏≠‡∏ö Committee Workflow...\n');

  try {
    // 1. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏£‡∏≠‡∏Å‡∏£‡∏£‡∏°‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö
    console.log('1Ô∏è‚É£ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏£‡∏≠‡∏Å‡∏£‡∏£‡∏°‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö...');
    const pendingReceiptResponse = await fetch(`${BASE_URL}/api/committee/workflow?action=pending_receipt`, {
      headers: {
        'x-user-id': testData.committeeId
      }
    });

    const pendingReceiptResult = await pendingReceiptResponse.json();
    console.log('‚úÖ ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏£‡∏≠‡∏£‡∏±‡∏ö‡∏Ñ‡∏≥‡∏Ç‡∏≠:', pendingReceiptResult.success ? '‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à' : '‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß');
    console.log('üìä ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£:', pendingReceiptResult.applications?.length || 0);
    console.log('');

    if (pendingReceiptResult.applications && pendingReceiptResult.applications.length > 0) {
      testData.applicationId = pendingReceiptResult.applications[0].id;
      console.log('üìÑ ‡πÉ‡∏ä‡πâ Application ID:', testData.applicationId);
    }

    // 2. ‡∏Å‡∏£‡∏£‡∏°‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö‡∏Ñ‡∏≥‡∏Ç‡∏≠
    console.log('2Ô∏è‚É£ ‡∏Å‡∏£‡∏£‡∏°‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö‡∏Ñ‡∏≥‡∏Ç‡∏≠...');
    const receiveResponse = await fetch(`${BASE_URL}/api/committee/workflow/actions`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'x-user-id': testData.committeeId
      },
      body: JSON.stringify({
        applicationId: testData.applicationId,
        action: 'receive_application',
        feedback: '‡∏£‡∏±‡∏ö‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏ù‡∏∂‡∏Å‡∏á‡∏≤‡∏ô‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏≠‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ß‡∏¥‡∏ä‡∏≤‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢'
      })
    });

    const receiveResult = await receiveResponse.json();
    console.log('‚úÖ ‡∏£‡∏±‡∏ö‡∏Ñ‡∏≥‡∏Ç‡∏≠:', receiveResult.success ? '‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à' : '‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß');
    console.log('üìù Message:', receiveResult.message);
    console.log('');

    // 3. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ Committee Workflow
    console.log('3Ô∏è‚É£ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ Committee Workflow...');
    const statusResponse = await fetch(`${BASE_URL}/api/committee/workflow?action=status&applicationId=${testData.applicationId}`, {
      headers: {
        'x-user-id': testData.committeeId
      }
    });

    const statusResult = await statusResponse.json();
    console.log('‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞:', statusResult.success ? '‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à' : '‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß');
    if (statusResult.success) {
      console.log('üìà Current Step:', statusResult.workflowStatus.currentStep);
      console.log('üìä Committee Received:', statusResult.workflowStatus.committeeReceived);
      console.log('üìä Committee Reviewed:', statusResult.workflowStatus.committeeReviewed);
    }
    console.log('');

    // 4. ‡∏Å‡∏£‡∏£‡∏°‡∏Å‡∏≤‡∏£‡∏û‡∏¥‡∏à‡∏≤‡∏£‡∏ì‡∏≤ (‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥)
    console.log('4Ô∏è‚É£ ‡∏Å‡∏£‡∏£‡∏°‡∏Å‡∏≤‡∏£‡∏û‡∏¥‡∏à‡∏≤‡∏£‡∏ì‡∏≤ (‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥)...');
    const reviewResponse = await fetch(`${BASE_URL}/api/committee/workflow/actions`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'x-user-id': testData.committeeId
      },
      body: JSON.stringify({
        applicationId: testData.applicationId,
        action: 'review_application',
        status: 'approved',
        feedback: '‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏ù‡∏∂‡∏Å‡∏á‡∏≤‡∏ô ‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏° ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡πÑ‡∏î‡πâ'
      })
    });

    const reviewResult = await reviewResponse.json();
    console.log('‚úÖ ‡∏û‡∏¥‡∏à‡∏≤‡∏£‡∏ì‡∏≤ (‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥):', reviewResult.success ? '‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à' : '‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß');
    console.log('üìù Message:', reviewResult.message);
    console.log('');

    // 5. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢
    console.log('5Ô∏è‚É£ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢...');
    const finalStatusResponse = await fetch(`${BASE_URL}/api/committee/workflow?action=status&applicationId=${testData.applicationId}`, {
      headers: {
        'x-user-id': testData.committeeId
      }
    });

    const finalStatusResult = await finalStatusResponse.json();
    console.log('‚úÖ ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢:', finalStatusResult.success ? '‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à' : '‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß');
    if (finalStatusResult.success) {
      console.log('üìà Current Step:', finalStatusResult.workflowStatus.currentStep);
      console.log('üìä Committee Received:', finalStatusResult.workflowStatus.committeeReceived);
      console.log('üìä Committee Reviewed:', finalStatusResult.workflowStatus.committeeReviewed);
      console.log('üìä Is Completed:', finalStatusResult.workflowStatus.isCompleted);
    }

    // 6. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥
    console.log('6Ô∏è‚É£ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥...');
    const approvalsResponse = await fetch(`${BASE_URL}/api/committee/workflow?action=approvals`, {
      headers: {
        'x-user-id': testData.committeeId
      }
    });

    const approvalsResult = await approvalsResponse.json();
    console.log('‚úÖ ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥:', approvalsResult.success ? '‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à' : '‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß');
    console.log('üìä ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£:', approvalsResult.approvals?.length || 0);

    console.log('\nüéâ ‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö Committee Workflow ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô!');

  } catch (error) {
    console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö:', error);
  }
}

// ‡∏£‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö
testCommitteeWorkflow();
