// ‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ï‡πå‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏£‡∏∞‡∏ö‡∏ö‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏à‡∏£‡∏¥‡∏á
async function testLiveSystem() {
  const baseUrl = 'http://localhost:3000';
  
  console.log('üöÄ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏£‡∏∞‡∏ö‡∏ö‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ó‡∏≥‡∏á‡∏≤‡∏ô...\n');
  
  // ‡∏ó‡∏î‡∏™‡∏≠‡∏ö Health Check
  console.log('üîç ‡∏ó‡∏î‡∏™‡∏≠‡∏ö Health Check API...');
  try {
    const response = await fetch(`${baseUrl}/api/health`);
    const data = await response.json();
    
    if (data.success) {
      console.log('‚úÖ Health Check: ‡∏£‡∏∞‡∏ö‡∏ö‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏õ‡∏Å‡∏ï‡∏¥');
      console.log(`   - Database: ${data.database}`);
      console.log(`   - Users: ${data.userCount} ‡∏Ñ‡∏ô`);
    } else {
      console.log('‚ùå Health Check: ‡∏£‡∏∞‡∏ö‡∏ö‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤');
    }
  } catch (error) {
    console.log('‚ùå Health Check: ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÑ‡∏î‡πâ - ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏≠‡∏¢‡∏π‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà');
    return;
  }
  
  // ‡∏ó‡∏î‡∏™‡∏≠‡∏ö Settings API
  console.log('\nüîç ‡∏ó‡∏î‡∏™‡∏≠‡∏ö Settings API...');
  try {
    const response = await fetch(`${baseUrl}/api/user/settings`, {
      headers: { 'x-user-id': 'test001' }
    });
    const data = await response.json();
    
    if (data.success) {
      console.log('‚úÖ Settings API: ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
      console.log(`   - ‡∏ä‡∏∑‡πà‡∏≠: ${data.settings.thaiName || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏'}`);
      console.log(`   - ‡∏≠‡∏µ‡πÄ‡∏°‡∏•: ${data.settings.email || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏'}`);
    } else {
      console.log('‚ùå Settings API:', data.error);
    }
  } catch (error) {
    console.log('‚ùå Settings API: ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î');
  }
  
  // ‡∏ó‡∏î‡∏™‡∏≠‡∏ö Academic API
  console.log('\nüîç ‡∏ó‡∏î‡∏™‡∏≠‡∏ö Academic API...');
  try {
    const response = await fetch(`${baseUrl}/api/academic/faculties`);
    const data = await response.json();
    
    if (data.success) {
      console.log(`‚úÖ Academic API: ‡∏û‡∏ö ${data.faculties.length} ‡∏Ñ‡∏ì‡∏∞`);
      data.faculties.slice(0, 2).forEach(faculty => {
        console.log(`   - ${faculty.nameTh} (${faculty.departments?.length || 0} ‡∏™‡∏≤‡∏Ç‡∏≤)`);
      });
    } else {
      console.log('‚ùå Academic API:', data.error);
    }
  } catch (error) {
    console.log('‚ùå Academic API: ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î');
  }
  
  // ‡∏ó‡∏î‡∏™‡∏≠‡∏ö Internships API
  console.log('\nüîç ‡∏ó‡∏î‡∏™‡∏≠‡∏ö Internships API...');
  try {
    const response = await fetch(`${baseUrl}/api/internships?type=internship`);
    const data = await response.json();
    
    if (data.success) {
      console.log(`‚úÖ Internships API: ‡∏û‡∏ö ${data.internships.length} ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ù‡∏∂‡∏Å‡∏á‡∏≤‡∏ô`);
      data.internships.slice(0, 3).forEach(internship => {
        console.log(`   - ${internship.title} ‡∏ó‡∏µ‡πà ${internship.company?.name || internship.companyId}`);
      });
    } else {
      console.log('‚ùå Internships API:', data.error);
    }
  } catch (error) {
    console.log('‚ùå Internships API: ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î');
  }
  
  // ‡∏ó‡∏î‡∏™‡∏≠‡∏ö Co-op API
  console.log('\nüîç ‡∏ó‡∏î‡∏™‡∏≠‡∏ö Co-op API...');
  try {
    const response = await fetch(`${baseUrl}/api/internships?type=co_op`);
    const data = await response.json();
    
    if (data.success) {
      console.log(`‚úÖ Co-op API: ‡∏û‡∏ö ${data.internships.length} ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏™‡∏´‡∏Å‡∏¥‡∏à`);
      data.internships.forEach(internship => {
        console.log(`   - ${internship.title} ‡∏ó‡∏µ‡πà ${internship.company?.name || internship.companyId}`);
      });
    } else {
      console.log('‚ùå Co-op API:', data.error);
    }
  } catch (error) {
    console.log('‚ùå Co-op API: ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î');
  }
  
  // ‡∏ó‡∏î‡∏™‡∏≠‡∏ö Applications API
  console.log('\nüîç ‡∏ó‡∏î‡∏™‡∏≠‡∏ö Applications API...');
  try {
    const response = await fetch(`${baseUrl}/api/applications?studentId=test001`);
    const data = await response.json();
    
    if (data.success) {
      console.log(`‚úÖ Applications API: ‡∏û‡∏ö ${data.applications.length} ‡πÉ‡∏ö‡∏™‡∏°‡∏±‡∏Ñ‡∏£`);
      if (data.applications.length > 0) {
        data.applications.forEach(app => {
          console.log(`   - ${app.internship?.title} (‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞: ${app.status})`);
        });
      } else {
        console.log('   - ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÉ‡∏ö‡∏™‡∏°‡∏±‡∏Ñ‡∏£');
      }
    } else {
      console.log('‚ùå Applications API:', data.error);
    }
  } catch (error) {
    console.log('‚ùå Applications API: ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î');
  }
  
  // ‡∏ó‡∏î‡∏™‡∏≠‡∏ö Storage Stats API
  console.log('\nüîç ‡∏ó‡∏î‡∏™‡∏≠‡∏ö Storage Stats API...');
  try {
    const response = await fetch(`${baseUrl}/api/storage/stats?userId=test001`);
    const data = await response.json();
    
    if (data.success) {
      console.log('‚úÖ Storage Stats API: ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
      console.log(`   - ‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: ${data.stats.formattedSize}`);
      console.log(`   - ‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: ${data.stats.totalFiles} ‡πÑ‡∏ü‡∏•‡πå`);
      console.log(`   - ‡∏£‡∏π‡∏õ‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå: ${data.stats.profiles.formattedSize} (${data.stats.profiles.files} ‡πÑ‡∏ü‡∏•‡πå)`);
      
      if (data.stats.user) {
        console.log(`   - ‡πÑ‡∏ü‡∏•‡πå‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ test001: ${data.stats.user.formattedSize} (${data.stats.user.files} ‡πÑ‡∏ü‡∏•‡πå)`);
      }
      
      if (data.stats.recommendations?.length > 0) {
        console.log('   üí° ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥:');
        data.stats.recommendations.forEach(rec => {
          console.log(`     - ${rec}`);
        });
      }
    } else {
      console.log('‚ùå Storage Stats API:', data.error);
    }
  } catch (error) {
    console.log('‚ùå Storage Stats API: ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î');
  }
  
  console.log('\nüéâ ‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô!');
  console.log('\nüìã ‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö:');
  console.log('‚úÖ ‡∏£‡∏∞‡∏ö‡∏ö‡πÉ‡∏ä‡πâ‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏£‡∏¥‡∏á‡πÅ‡∏ó‡∏ô mock data');
  console.log('‚úÖ API endpoints ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏Å‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏£‡∏¥‡∏á');
  console.log('‚úÖ ‡∏£‡∏∞‡∏ö‡∏ö‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏ã‡πâ‡∏≥');
  console.log('‚úÖ ‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥');
  console.log('\nüöÄ ‡∏£‡∏∞‡∏ö‡∏ö‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÄ‡∏ï‡πá‡∏°‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö!');
}

// ‡∏£‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö
testLiveSystem();