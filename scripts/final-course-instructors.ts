import prisma from '../src/lib/prisma';

async function createFinalCourseInstructors() {
  try {
    console.log('üöÄ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ß‡∏¥‡∏ä‡∏≤‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢...');

    // 1. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà
    const existingYear = await prisma.academicYear.findFirst({
      where: { year: '2568' }
    });
    
    const semesters = await prisma.semester.findMany({
      where: { academicYearId: existingYear.id }
    });
    
    const instructorRole = await prisma.educatorRole.findFirst({
      where: { name: '‡∏≠‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ß‡∏¥‡∏ä‡∏≤' }
    });

    console.log(`üìÖ ‡∏õ‡∏µ‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤: ${existingYear.year}`);
    console.log(`üìö ‡πÄ‡∏ó‡∏≠‡∏°: ${semesters.length} ‡πÄ‡∏ó‡∏≠‡∏°`);
    console.log(`üë®‚Äçüè´ ‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó: ${instructorRole.name}`);

    // 2. ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ß‡∏¥‡∏ä‡∏≤‡πÉ‡∏´‡∏°‡πà
    const courseInstructorData = [
      {
        id: 'ci_tech_info_68',
        instructorId: 'instructor_001',
        courseId: 'IT101',
        courseName: '‡πÄ‡∏ó‡∏Ñ‡πÇ‡∏ô‡πÇ‡∏•‡∏¢‡∏µ‡∏™‡∏≤‡∏£‡∏™‡∏ô‡πÄ‡∏ó‡∏®'
      },
      {
        id: 'ci_software_dev_68',
        instructorId: 'instructor_002',
        courseId: 'SD201',
        courseName: '‡∏Å‡∏≤‡∏£‡∏û‡∏±‡∏í‡∏ô‡∏≤‡∏ã‡∏≠‡∏ü‡∏ï‡πå‡πÅ‡∏ß‡∏£‡πå'
      },
      {
        id: 'ci_computer_sci_68',
        instructorId: 'instructor_003',
        courseId: 'CS301',
        courseName: '‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå'
      },
      {
        id: 'ci_business_mgmt_68',
        instructorId: 'instructor_004',
        courseId: 'BM401',
        courseName: '‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ò‡∏∏‡∏£‡∏Å‡∏¥‡∏à'
      }
    ];

    // 3. ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏≠‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ß‡∏¥‡∏ä‡∏≤
    console.log('üéØ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏≠‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ß‡∏¥‡∏ä‡∏≤...');
    
    for (const ci of courseInstructorData) {
      // ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏ó‡∏≠‡∏°‡πÅ‡∏£‡∏Å (active)
      const firstSemester = semesters[0];
      try {
        await prisma.courseInstructor.create({
          data: {
            id: `${ci.id}_${firstSemester.id}`,
            instructorId: ci.instructorId,
            roleId: instructorRole.id,
            academicYearId: existingYear.id,
            semesterId: firstSemester.id,
            courseId: ci.courseId,
            isActive: true,
            createdBy: 'admin-001'
          }
        });
        console.log(`‚úÖ ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏≠‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå: ${ci.courseName} - ${firstSemester.name}`);
      } catch (error) {
        console.log(`‚ö†Ô∏è  ‡∏≠‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå ${ci.courseName} - ${firstSemester.name} ‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß`);
      }

      // ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏ó‡∏≠‡∏°‡∏≠‡∏∑‡πà‡∏ô‡πÜ (inactive)
      for (let i = 1; i < semesters.length; i++) {
        const semester = semesters[i];
        try {
          await prisma.courseInstructor.create({
            data: {
              id: `${ci.id}_${semester.id}`,
              instructorId: ci.instructorId,
              roleId: instructorRole.id,
              academicYearId: existingYear.id,
              semesterId: semester.id,
              courseId: ci.courseId,
              isActive: false,
              createdBy: 'admin-001'
            }
          });
          console.log(`‚úÖ ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏≠‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå: ${ci.courseName} - ${semester.name}`);
        } catch (error) {
          console.log(`‚ö†Ô∏è  ‡∏≠‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå ${ci.courseName} - ${semester.name} ‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß`);
        }
      }
    }

    // 4. ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï educatorRoleId ‡πÉ‡∏´‡πâ‡∏≠‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå‡πÉ‡∏´‡∏°‡πà
    console.log('üîó ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï educatorRoleId ‡πÉ‡∏´‡πâ‡∏≠‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå‡πÉ‡∏´‡∏°‡πà...');
    const newInstructors = ['instructor_002', 'instructor_003', 'instructor_004'];
    for (const instructorId of newInstructors) {
      try {
        await prisma.user.update({
          where: { id: instructorId },
          data: { educatorRoleId: instructorRole.id }
        });
        console.log(`‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï educatorRoleId: ${instructorId}`);
      } catch (error) {
        console.log(`‚ö†Ô∏è  ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏≠‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå: ${instructorId}`);
      }
    }

    console.log('üéâ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ß‡∏¥‡∏ä‡∏≤‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô!');
    
    // ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏£‡∏∏‡∏õ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    const totalInstructors = await prisma.user.count({
      where: { roles: { contains: 'instructor' } }
    });
    
    const totalCourseInstructors = await prisma.courseInstructor.count();

    console.log('\nüìä ‡∏™‡∏£‡∏∏‡∏õ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•:');
    console.log(`- ‡∏≠‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: ${totalInstructors} ‡∏Ñ‡∏ô`);
    console.log(`- ‡∏Å‡∏≤‡∏£‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏≠‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ß‡∏¥‡∏ä‡∏≤: ${totalCourseInstructors} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`);
    console.log(`- ‡∏õ‡∏µ‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤: 2568`);
    console.log(`- ‡πÄ‡∏ó‡∏≠‡∏°: ${semesters.length} ‡πÄ‡∏ó‡∏≠‡∏°`);
    console.log(`- ‡∏ß‡∏¥‡∏ä‡∏≤: 4 ‡∏ß‡∏¥‡∏ä‡∏≤`);

  } catch (error) {
    console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:', error);
  } finally {
    await prisma.$disconnect();
  }
}

createFinalCourseInstructors();
