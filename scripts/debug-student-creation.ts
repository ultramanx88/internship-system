import { PrismaClient } from '@prisma/client';

const prisma = new PrismaClient();

async function debugStudentCreation() {
  try {
    console.log('üîç Debugging student creation...');
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    const userCount = await prisma.user.count();
    console.log(`üìä Total users in database: ${userCount}`);
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏ì‡∏∞ ‡∏†‡∏≤‡∏Ñ‡∏ß‡∏¥‡∏ä‡∏≤ ‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏π‡∏ï‡∏£ ‡πÅ‡∏•‡∏∞‡∏™‡∏≤‡∏Ç‡∏≤‡∏ß‡∏¥‡∏ä‡∏≤
    const faculties = await prisma.faculty.findMany();
    const departments = await prisma.department.findMany();
    const curriculums = await prisma.curriculum.findMany();
    const majors = await prisma.major.findMany();
    
    console.log(`üìö Found ${faculties.length} faculties, ${departments.length} departments, ${curriculums.length} curriculums, ${majors.length} majors`);
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á
    console.log('üèõÔ∏è Faculties:', faculties.map(f => ({ id: f.id, name: f.nameTh })));
    console.log('üè¢ Departments:', departments.map(d => ({ id: d.id, name: d.nameTh, facultyId: d.facultyId })));
    console.log('üìñ Curriculums:', curriculums.map(c => ({ id: c.id, name: c.nameTh, departmentId: c.departmentId })));
    console.log('üéì Majors:', majors.map(m => ({ id: m.id, name: m.nameTh, curriculumId: m.curriculumId })));
    
    // ‡∏•‡∏≠‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡∏Ñ‡∏ô‡πÄ‡∏î‡∏µ‡∏¢‡∏ß
    const testStudent = {
      name: "‡∏ó‡∏î‡∏™‡∏≠‡∏ö ‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤",
      email: "test.student@university.ac.th",
      password: "password123",
      roles: "student",
      t_title: "‡∏ô‡∏≤‡∏¢",
      t_name: "‡∏ó‡∏î‡∏™‡∏≠‡∏ö",
      t_surname: "‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤",
      e_title: "Mr.",
      e_name: "Test",
      e_surname: "Student",
      facultyId: "faculty-1",
      departmentId: "dept-1",
      curriculumId: "curr-1",
      majorId: "major-1",
      studentYear: 3,
      phone: "081-234-5678",
      campus: "‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡πÄ‡∏Ç‡∏ï‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û",
      gpa: "3.45",
      nationality: "‡πÑ‡∏ó‡∏¢",
      passportId: null,
      visaType: "none",
      profileImage: null,
      skills: "JavaScript, React, Node.js",
      statement: "‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤",
      notifyEmail: true,
      notifyPush: false,
      notifySms: false,
      notifyAppUpdates: true,
      notifyDeadlines: true,
      notifyNews: false,
      language: "th",
      theme: "light",
      dateFormat: "thai"
    };
    
    console.log('üß™ Creating test student...');
    const student = await prisma.user.create({
      data: testStudent
    });
    
    console.log('‚úÖ Test student created successfully:', student);
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ñ‡∏π‡∏Å‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    const createdStudent = await prisma.user.findUnique({
      where: { email: testStudent.email }
    });
    
    console.log('üîç Verification - Found student:', createdStudent);
    
  } catch (error) {
    console.error('‚ùå Error during debug:', error);
  } finally {
    await prisma.$disconnect();
  }
}

debugStudentCreation();
