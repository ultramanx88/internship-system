const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

async function testTimelineDisplay() {
  try {
    console.log('üß™ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏• Timeline...\n');

    const studentId = 'u6800001';
    
    // 1. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤
    console.log('1Ô∏è‚É£ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤...');
    const student = await prisma.user.findUnique({
      where: { id: studentId },
      select: {
        id: true,
        name: true,
        email: true,
        t_name: true,
        t_surname: true,
        t_title: true,
        phone: true,
        majorId: true,
        departmentId: true,
        facultyId: true,
        curriculumId: true
      }
    });

    if (!student) {
      console.log('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤');
      return;
    }

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤
    const studentRegistered = student.name && student.email && student.phone && 
                            student.t_name && student.t_surname && 
                            student.facultyId && student.majorId;
    
    console.log('‚úÖ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤:', studentRegistered ? '‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô' : '‡πÑ‡∏°‡πà‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô');
    console.log(`   - Name: ${student.name || '‚ùå'}`);
    console.log(`   - Email: ${student.email || '‚ùå'}`);
    console.log(`   - Phone: ${student.phone || '‚ùå'}`);
    console.log(`   - T Name: ${student.t_name || '‚ùå'}`);
    console.log(`   - T Surname: ${student.t_surname || '‚ùå'}`);
    console.log(`   - Faculty ID: ${student.facultyId || '‚ùå'}`);
    console.log(`   - Major ID: ${student.majorId || '‚ùå'}\n`);

    // 2. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏ù‡∏∂‡∏Å‡∏á‡∏≤‡∏ô
    console.log('2Ô∏è‚É£ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏ù‡∏∂‡∏Å‡∏á‡∏≤‡∏ô...');
    const applications = await prisma.application.findMany({
      where: { studentId },
      select: {
        id: true,
        status: true,
        dateApplied: true,
        projectTopic: true,
        feedback: true
      }
    });

    console.log(`‚úÖ ‡∏û‡∏ö‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏ù‡∏∂‡∏Å‡∏á‡∏≤‡∏ô: ${applications.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`);
    applications.forEach((app, index) => {
      console.log(`   ${index + 1}. ID: ${app.id}`);
      console.log(`      Status: ${app.status}`);
      console.log(`      Date Applied: ${app.dateApplied}`);
      console.log(`      Project Topic: ${app.projectTopic || '‡πÑ‡∏°‡πà‡∏°‡∏µ'}`);
    });
    console.log('');

    // 3. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏ù‡∏∂‡∏Å‡∏á‡∏≤‡∏ô
    console.log('3Ô∏è‚É£ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏ù‡∏∂‡∏Å‡∏á‡∏≤‡∏ô...');
    const hasApplied = applications.length > 0;
    const hasPending = applications.some(app => app.status === 'pending');
    const hasApproved = applications.some(app => app.status === 'approved');
    const hasCompleted = applications.some(app => app.status === 'completed');

    console.log(`‚úÖ Has Applied: ${hasApplied}`);
    console.log(`‚úÖ Has Pending: ${hasPending}`);
    console.log(`‚úÖ Has Approved: ${hasApproved}`);
    console.log(`‚úÖ Has Completed: ${hasCompleted}\n`);

    // 4. ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ó‡∏°‡πå‡πÑ‡∏•‡∏ô‡πå‡∏ï‡∏≤‡∏°‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
    console.log('4Ô∏è‚É£ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ó‡∏°‡πå‡πÑ‡∏•‡∏ô‡πå‡∏ï‡∏≤‡∏°‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞...');
    const steps = [
      {
        step: 1,
        title: '‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤',
        status: studentRegistered ? 'completed' : 'current',
        isEditable: !studentRegistered,
        buttonText: studentRegistered ? '‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÅ‡∏•‡πâ‡∏ß' : '‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•',
        description: '‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß‡πÅ‡∏•‡∏∞‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠'
      },
      {
        step: 2,
        title: '‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏´‡∏Å‡∏¥‡∏à‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡∏´‡∏£‡∏∑‡∏≠‡∏ù‡∏∂‡∏Å‡∏á‡∏≤‡∏ô',
        status: hasApplied ? (hasPending ? 'current' : 'completed') : (studentRegistered ? 'current' : 'upcoming'),
        isEditable: studentRegistered && !hasApplied,
        buttonText: hasApplied ? (hasPending ? '‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö' : '‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÅ‡∏•‡πâ‡∏ß') : (studentRegistered ? '‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£' : '‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô'),
        description: hasApplied ? (hasPending ? '‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏≠‡∏¢‡∏π‡πà‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö' : '‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏≤‡∏£‡∏ù‡∏∂‡∏Å‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡∏∞‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£') : '‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏≤‡∏£‡∏ù‡∏∂‡∏Å‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡∏∞‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£'
      },
      {
        step: 3,
        title: '‡∏¢‡∏∑‡πà‡∏ô‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö‡∏ó‡∏≤‡∏á‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó',
        status: hasApproved ? 'completed' : (hasApplied ? (hasPending ? 'upcoming' : 'current') : 'upcoming'),
        isEditable: hasApplied && !hasApproved && !hasPending,
        buttonText: hasApproved ? '‡∏™‡πà‡∏á‡πÅ‡∏•‡πâ‡∏ß' : (hasApplied ? (hasPending ? '‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥' : '‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£') : '‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏™‡∏°‡∏±‡∏Ñ‡∏£'),
        description: hasApplied ? (hasPending ? '‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡∏à‡∏≤‡∏Å‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà' : '‡∏™‡πà‡∏á‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡πÉ‡∏´‡πâ‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó') : '‡∏™‡πà‡∏á‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡πÉ‡∏´‡πâ‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó'
      },
      {
        step: 4,
        title: '‡∏ä‡πà‡∏ß‡∏á‡∏™‡∏´‡∏Å‡∏¥‡∏à‡∏®‡∏∂‡∏Å‡∏©‡∏≤ / ‡∏ù‡∏∂‡∏Å‡∏á‡∏≤‡∏ô',
        status: hasCompleted ? 'completed' : (hasApproved ? 'current' : 'upcoming'),
        isEditable: hasApproved && !hasCompleted,
        buttonText: hasCompleted ? '‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô' : (hasApproved ? '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ù‡∏∂‡∏Å‡∏á‡∏≤‡∏ô' : '‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥'),
        description: '‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥‡∏á‡∏≤‡∏ô‡∏ï‡∏≤‡∏°‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏°‡∏≠‡∏ö‡∏´‡∏°‡∏≤‡∏¢'
      },
      {
        step: 5,
        title: '‡∏Å‡∏£‡∏≠‡∏Å‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Å‡∏ï‡πå',
        status: hasCompleted ? 'current' : 'upcoming',
        isEditable: hasCompleted,
        buttonText: hasCompleted ? '‡∏Å‡∏£‡∏≠‡∏Å‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠' : '‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏ù‡∏∂‡∏Å‡∏á‡∏≤‡∏ô',
        description: '‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡∏∞‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Å‡∏ï‡πå'
      }
    ];

    console.log('üìã Timeline Steps:');
    steps.forEach(step => {
      const statusIcon = step.status === 'completed' ? '‚úÖ' : 
                        step.status === 'current' ? 'üîÑ' : '‚è≥';
      console.log(`   ${statusIcon} Step ${step.step}: ${step.title}`);
      console.log(`      Status: ${step.status}`);
      console.log(`      Button: ${step.buttonText}`);
      console.log(`      Description: ${step.description}`);
      console.log(`      Editable: ${step.isEditable ? 'Yes' : 'No'}`);
      console.log('');
    });

    // 5. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
    console.log('5Ô∏è‚É£ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô...');
    const currentStep = steps.find(step => step.status === 'current');
    if (currentStep) {
      console.log(`‚úÖ ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô: Step ${currentStep.step} - ${currentStep.title}`);
      console.log(`   Button Text: ${currentStep.buttonText}`);
      console.log(`   Description: ${currentStep.description}`);
    } else {
      console.log('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô');
    }

    console.log('\nüéâ ‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö Timeline ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô!');

  } catch (error) {
    console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:', error);
  } finally {
    await prisma.$disconnect();
  }
}

testTimelineDisplay();
